@using Sandbox;
@using Sandbox.UI;
@using System.Threading.Tasks;
@inherits PanelComponent
@namespace Sandbox

<root>
    <div class="fadePanel" style="background: radial-gradient(rgba(0, 0, 0, @FadeOpacity) 0%, rgba(0, 0, 0, @FadeOpacity) 100% );"></div>
</root>


@code
{
    [Property] float FadeOpacity { get; set; } = 0f;

    private RealTimeUntil _timer;

    [Button]
    public async Task DoFade(float opacity = 0.9f, float doTimer = 3f, float fadeTimer = 3f, float outTimer = 1f)
    {
        await InFade(opacity, doTimer);

        await Task.DelaySeconds(fadeTimer);

        await OutFade(outTimer);
    }

    public async Task InFade(float opacity = 0.9f, float doTimer = 3f)
    {
        _timer = doTimer;

        var startOpacity = FadeOpacity;

        while (!_timer)
        {
            FadeOpacity = startOpacity + (opacity - startOpacity) * ((float)_timer.Passed / doTimer);

            await Task.Yield();
        }

        FadeOpacity = opacity;
    }
    
    public async Task OutFade(float outTimer = 3f)
    {
        _timer = outTimer;

        var startOpacity = FadeOpacity;

        while (!_timer)
        {
            FadeOpacity = startOpacity + (0 - startOpacity) * ((float)_timer.Passed / outTimer);

            await Task.Yield();
        }

        FadeOpacity = 0;
    }

    protected override int BuildHash() => System.HashCode.Combine(FadeOpacity);
}